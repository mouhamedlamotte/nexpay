services:
  traefik:
    image: traefik:v3.5
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ADMIN_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./config/traefik/dynamic:/etc/traefik/dynamic
      - ./config/traefik/letsencrypt/acme.json:/letsencrypt/acme.json
    environment:
      - APP_DOMAIN=${APP_DOMAIN}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${APP_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH}"
    networks:
      - nexpay-web
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  nexpay-db:
    image: postgres:17-alpine
    container_name: nexpay-db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_nexpay:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - nexpay-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nexpay-cache:
    image: redis:7-alpine
    container_name: nexpay-cache
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    hostname: nexpay-cache
    ports:
      - "63791:6379"   # Port Redis diff√©rent (au lieu de 6379)
    volumes:
      - redis_data_nexpay:/data
    networks:
      - nexpay-backend
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: unless-stopped

  nexpay-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: nexpay-api
    environment:
      - NODE_ENV=production
      - APP_PORT=9000
      - APP_NAME=${APP_NAME}
      - APP_DOMAIN=${APP_DOMAIN}
      - GLOBAL_PREFIX=api/v1
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@nexpay-cache:6379
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - X_WRITE_KEY=${X_WRITE_KEY}
      - X_READ_KEY=${X_READ_KEY}
    depends_on:
      nexpay-db:
        condition: service_healthy
      nexpay-cache:
        condition: service_started
    command: sh -c "npx prisma migrate deploy && npm run prod"
    expose:
      - 9000
    networks:
      - nexpay-web
      - nexpay-backend


  nexpay-web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: "https://${APP_DOMAIN}/api/v1"
        NEXT_PUBLIC_READ_API_KEY: ${X_READ_KEY}
    container_name: nexpay-web
    environment:
      - NEXT_PUBLIC_API_URL=https://${APP_DOMAIN}/api/v1
      - NEXT_PUBLIC_READ_API_KEY=${X_READ_KEY}
    expose:
      - 9001
    networks:
      - nexpay-web



networks:
  nexpay-web:
    name: nexpay-web
    driver: bridge
  nexpay-backend:
    name: nexpay-backend
    driver: bridge
    internal: true

volumes:
  postgres_data_nexpay:
    name: postgres_data_nexpay
  redis_data_nexpay:
    name: redis_data_nexpay