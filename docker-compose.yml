services:
  traefik_nexpay:
    image: traefik:v3.5
    container_name: traefik_nexpay
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ADMIN_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "9090:80"      # Port HTTP différent (au lieu de 80)
      - "9091:443"     # Port HTTPS différent (au lieu de 443)
      - "9092:8080"    # Dashboard Traefik (au lieu de 8080)
    volumes:
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./config/traefik/dynamic:/etc/traefik/dynamic
      - ./config/traefik/letsencrypt/acme-nexpay.json:/letsencrypt/acme-nexpay.json
    environment:
      - APP_DOMAIN=${APP_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${APP_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH}"
    networks:
      - web_nexpay
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  postgres_nexpay:
    image: postgres:15-alpine
    container_name: postgres_nexpay
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "54321:5432"   # Port Postgres différent (au lieu de 5432)
    volumes:
      - postgres_data_nexpay:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - backend_nexpay
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_nexpay:
    image: redis:7-alpine
    container_name: redis_nexpay
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    hostname: redis_nexpay
    ports:
      - "63791:6379"   # Port Redis différent (au lieu de 6379)
    volumes:
      - redis_data_nexpay:/data
    networks:
      - backend_nexpay
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: unless-stopped

  api_nexpay:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api_nexpay
    environment:
      - NODE_ENV=production
      - APP_PORT=9000
      - APP_NAME=${APP_NAME}
      - APP_DOMAIN=${APP_DOMAIN}
      - GLOBAL_PREFIX=api/v1
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres_nexpay:5432/${DB_NAME}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis_nexpay:6379
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ADMIN_EMAIL=admin@nexpay.command
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      postgres_nexpay:
        condition: service_healthy
      redis_nexpay:
        condition: service_started
    command: sh -c "npx prisma migrate deploy && npm run prod"
    ports:
      - "9093:9000"    # Port API exposé
    networks:
      - web_nexpay
      - backend_nexpay
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: nexpay_web
    environment:
      - NEXT_PUBLIC_API_URL=http://${APP_DOMAIN}/api/v1
    expose:
      - 9001
    networks:
      - web_nexpay


networks:
  web_nexpay:
    name: web_nexpay
    driver: bridge
  backend_nexpay:
    name: backend_nexpay
    driver: bridge
    internal: true

volumes:
  postgres_data_nexpay:
    name: postgres_data_nexpay
  redis_data_nexpay:
    name: redis_data_nexpay